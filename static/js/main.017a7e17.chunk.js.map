{"version":3,"sources":["hooks/useFetch.js","hooks/usePost.js","Components/AddSongInput/index.js","Components/QuoteDisplay/index.js","Components/SongList/index.js","Components/SquatInput/index.js","Components/App/index.js","reportWebVitals.js","index.js"],"names":["useFetch","songLengthState","useState","dataState","setDataState","quoteDataState","setQuoteDataState","BACKEND_URL","BACKEND_URL_Quotes","songLengthStateNew","console","log","Math","floor","PATH","a","fetch","result","json","data","QuoteResult","QuoteData","useEffect","fetchData","DATA","songData","quoteData","usePost","newSong","requestOptions","method","headers","body","JSON","stringify","makePost","initialData","Title","Artist","SongLengthCode","Link","SuggestedBy","AddSongInput","setData","postData","setPostData","UpdateData","event","key","target","id","newValue","value","className","action","type","placeholder","onChange","e","form","required","onClick","preventDefault","document","querySelector","reset","QuoteDisplay","quote","SongList","title","artist","href","link","suggestedBy","SquatInput","input","setInput","min","App","appData","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.017a7e17.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction useFetch(songLengthState) {\n  const [dataState, setDataState] = useState(1);\n  const [quoteDataState, setQuoteDataState] = useState({});\n\n  const BACKEND_URL = \"https://localhost:5001/songs\";\n  const BACKEND_URL_Quotes = \"https://localhost:5001/quotes\";\n\n  let songLengthStateNew = songLengthState / 30;\n\n  if (songLengthStateNew <= 1) {\n    songLengthStateNew = 1;\n    console.log(`scl if under 1 ${songLengthStateNew}`);\n  } else {\n    songLengthStateNew = Math.floor(songLengthStateNew);\n    console.log(`scl after math floor ${songLengthStateNew}`);\n  }\n\n  const PATH = songLengthStateNew;\n\n  async function fetchData() {\n    let result = await fetch(`${BACKEND_URL}/${PATH}`);\n    let data = await result.json();\n    setDataState(data);\n\n    let QuoteResult = await fetch(`${BACKEND_URL_Quotes}/${PATH}`);\n    let QuoteData = await QuoteResult.json();\n    setQuoteDataState(QuoteData);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [songLengthState]);\n\n  let DATA = { songData: dataState, quoteData: quoteDataState };\n  console.log(DATA);\n  return DATA;\n}\n\nexport default useFetch;\n","import { useEffect } from \"react\";\n\nfunction usePost(newSong) {\n  function makePost() {\n    // our form returns object\n    // give object to post to add to db\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newSong),\n    };\n    fetch(\"https://localhost:5001/songs\", requestOptions);\n  }\n\n  useEffect(() => {\n    makePost(newSong);\n  }, [newSong]);\n}\n\nexport default usePost;\n","import { useState } from 'react';\nimport usePost from '../../hooks/usePost';\nimport './AddSongInput.css';\n\nconst initialData = {\n\tTitle          : 'bob',\n\tArtist         : 'bob',\n\tSongLengthCode : 'bob',\n\tLink           : 'bob',\n\tSuggestedBy    : 'bob',\n};\n\nfunction AddSongInput() {\n\tconst [ data, setData ] = useState(initialData);\n\tconst [ postData, setPostData ] = useState(initialData);\n\n\tfunction UpdateData(event) {\n\t\tconst key = event.target.id;\n\t\tconst newValue = event.target.value;\n\t\tsetData({ ...data, [key]: newValue });\n\t}\n\n\t// post songs from here using usePost custom hooks.\n\tusePost(postData);\n\n\t// let selectStyle = {\n\t//   height: '26px',};\n\n\treturn (\n\t\t<form id='form' className='add-song-form' action='submit'>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Title'\n\t\t\t\tid='Title'\n\t\t\t\tonChange={(e) => UpdateData(e)}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Artist'\n\t\t\t\tid='Artist'\n\t\t\t\tonChange={(e) => UpdateData(e)}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Link'\n\t\t\t\tid='Link'\n\t\t\t\tonChange={(e) => UpdateData(e)}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Your Name'\n\t\t\t\tid='SuggestedBy'\n\t\t\t\tonChange={(e) => UpdateData(e)}\n\t\t\t/>\n\t\t\t<select\n\t\t\t\tform='form'\n\t\t\t\ttype='text'\n\t\t\t\tid='SongLengthCode'\n\t\t\t\tonChange={(e) => UpdateData(e)}\n\t\t\t\trequired\n\t\t\t>\n\t\t\t\t<option value='0'>How Long is The Song?</option>\n\t\t\t\t<option value='1'>0-60 seconds</option>\n\t\t\t\t<option value='2'>61-90 seconds</option>\n\t\t\t\t<option value='3'>91-120 seconds</option>\n\t\t\t\t<option value='4'>121-150 seconds</option>\n\t\t\t\t<option value='5'>151-180 seconds</option>\n\t\t\t\t<option value='6'>181-210 seconds</option>\n\t\t\t\t<option value='7'>211-240 seconds</option>\n\t\t\t\t<option value='8'>241-280 seconds</option>\n\t\t\t</select>\n\n\t\t\t<button\n\t\t\t\tclassName='add-song-btn'\n\t\t\t\tonClick={(event) => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tsetPostData(data);\n\t\t\t\t\tdocument.querySelector('.add-song-form').reset();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tAdd Song\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nexport default AddSongInput;\n","import \"./QuoteDisplay.css\";\n\nfunction QuoteDisplay({ data }) {\n  // take in data from fetch\n  return (\n    <div className=\"quote-display\">\n      <h2 className=\"quote-title\">Motivational Quote:</h2>\n      <p className=\"quote\">\"{data.quote}\"</p>\n    </div>\n  );\n}\n\nexport default QuoteDisplay;\n","import './SongList.css';\n\nfunction SongList({ data }) {\n\treturn (\n\t\t<div className='song-list'>\n\t\t\t<h3>{data.title}</h3>\n\t\t\t<h4>\n\t\t\t\t<span>by </span>\n\t\t\t\t{data.artist}\n\t\t\t</h4>\n\t\t\t<p className=\"link-p\">\n\t\t\t\tLink: <a href='{data.link}'>{data.link}</a>\n\t\t\t</p>\n\n\t\t\t<p className='suggested-by'>\n\t\t\t\tSuggested by <span>{data.suggestedBy}</span>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default SongList;\n","import { useState } from 'react';\nimport './SquatInput.css';\n\n//takes in function to send squats back up to app.\n\nfunction SquatInput({ onClick }) {\n\tconst [ input, setInput ] = useState(5);\n\n\treturn (\n\t\t<form className='squat-input-form'>\n\t\t\t<p className='squat-text'>\n\t\t\t\tEnter How Many Squats You Gotta Do:\n\t\t\t</p>\n\t\t\t<input\n\t\t\t\tclassName='squat-input-number'\n\t\t\t\ttype='number'\n\t\t\t\tmin='0'\n\t\t\t\tvalue={input}\n\t\t\t\tonChange={(e) => setInput(e.target.value)}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tclassName='squat-input-btn'\n\t\t\t\ttype='submit'\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tonClick(input);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tGet Songs\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nexport default SquatInput;\n\n//Moved Calc to fetch function to monitor the change of 1 squat, not the SLC//\n//calc in here???\n// let squatResult = input  ;\n\n// > 1 ? Math.floor(input/60) : 1;\n// console.log(squatResult)\n// if (squatResult <= 1){\n//   squatResult = 1;\n//   console.log(squatResult)\n\n// }\n// else\n// {\n//   squatResult = Math.floor(squatResult);\n//   console.log(squatResult)\n// }\n//send data up\n","import { useState } from 'react';\nimport useFetch from '../../hooks/useFetch';\nimport AddSongInput from '../AddSongInput';\nimport QuoteDisplay from '../QuoteDisplay';\nimport SongList from '../SongList';\nimport SquatInput from '../SquatInput';\nimport './App.css';\n\nfunction App() {\n\tconst [ dataState, setDataState ] = useState(0);\n\t// fetch songs here using our custom hook - useFetch\n\n\tconst appData = useFetch(dataState);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<header>\n\t\t\t\t<img\n\t\t\t\t\tid='man'\n\t\t\t\t\tsrc='https://hips.hearstapps.com/ame-prod-menshealth-assets.s3.amazonaws.com/main/assets/bodyweight-squat.gif?resize=480:*'\n\t\t\t\t\talt='man squatting'\n\t\t\t\t/>\n\t\t\t\t<h1>\n\t\t\t\t\t<span id='title-span'>SSSG</span>\n\t\t\t\t\tSuper Squat Song Generator\n\t\t\t\t</h1>\n\t\t\t\t<img\n\t\t\t\t\tid='woman'\n\t\t\t\t\tsrc='https://thumbs.gfycat.com/BlueWetHarvestmouse-small.gif'\n\t\t\t\t\talt='woman squatting'\n\t\t\t\t/>\n\t\t\t</header>\n\n\t\t\t<SquatInput onClick={setDataState} />\n\t\t\t<QuoteDisplay data={appData.quoteData} />\n\t\t\t<SongList className='list-com' data={appData.songData} />\n\n\t\t\t<footer>\n\t\t\t\t\t<img\n\t\t\t\t\tid='soc'\n\t\t\t\t\tsrc='https://www.schoolofcode.co.uk/static/logo-51c754388b198e5bbb0d08a971ebbfa2.png'\n\t\t\t\t\talt='soc logo'\n\t\t\t\t/>\n\t\t\t\t<AddSongInput className='add-song-com' />\n\t\t\t\t<img\n\t\t\t\t\tid='soc'\n\t\t\t\t\tsrc='https://www.schoolofcode.co.uk/static/logo-51c754388b198e5bbb0d08a971ebbfa2.png'\n\t\t\t\t\talt='soc logo'\n\t\t\t\t/>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}