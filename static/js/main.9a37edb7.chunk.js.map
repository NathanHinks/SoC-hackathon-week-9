{"version":3,"sources":["libs/dependencies.js","redux/reducers.js","redux/store.js","redux/actions.js","utils/getSongLength.js","utils/getSong.js","redux/dispatches.js","utils/postSong.js","Components/AddSongInput/index.js","Components/Footer/index.js","Components/Header/index.js","Components/QuoteDisplay/index.js","Components/SongList/index.js","Components/SquatInput/index.js","Components/App/index.js","reportWebVitals.js","index.js"],"names":["BACKEND_URL","defaultState","numberOfSquats","suggestedSong","newSongSuggestion","initialData","Title","Artist","SongLengthCode","Link","SuggestedBy","formInputs","type","placeholder","id","songLengths","value","minutes","seconds","reducer","state","action","console","log","payload","isLoading","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","setIsLoading","status","getSongLength","songLengthState","R","Math","floor","getSong","a","dispatch","PATH","fetch","result","json","songData","quoteResult","quoteData","song","setSuggestedSong","postSong","newSong","requestOptions","method","headers","body","JSON","stringify","AddSongInput","useState","formData","setFormData","updateFormData","e","target","useDispatch","className","onSubmit","preventDefault","document","querySelector","reset","map","input","i","key","onChange","required","form","length","Footer","src","alt","Header","QuoteDisplay","quote","useSelector","SongList","title","artist","link","suggestedBy","href","SquatInput","setInput","min","onClick","App","videoUrl","useEffect","color","size","css","url","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a37edb7.chunk.js","sourcesContent":["export const BACKEND_URL = 'https://supersquatsongapp.herokuapp.com';\n\nexport const defaultState = {\n  numberOfSquats: 5,\n  suggestedSong: {\n\n  },\n  newSongSuggestion: {\n  }\n}\n\nexport const initialData = {\n  Title: 'blank',\n  Artist: 'blank',\n  SongLengthCode: 'blank',\n  Link: 'blank',\n  SuggestedBy: 'blank',\n};\n\nexport const formInputs = [\n  {\n    type: 'text',\n    placeholder: 'Title',\n    id: 'Title',\n  },\n  {\n    type: 'text',\n    placeholder: 'Artist',\n    id: 'Artist',\n  },\n  {\n    type: 'text',\n    placeholder: 'Link',\n    id: 'Link',\n  },\n  {\n    type: 'text',\n    placeholder: 'Your Name',\n    id: 'SuggestedBy',\n  },\n];\n\nexport const songLengths = [\n  {\n    value: '0',\n    minutes: 'How Long is The Song?',\n    seconds: 'please select',\n  },\n  {\n    value: '1',\n    minutes: '0 - 1 minute',\n    seconds: '0s-60s',\n  },\n  {\n    value: '2',\n    minutes: '1 - 1.5 minutes',\n    seconds: '61s-90s',\n  },\n  {\n    value: '3',\n    minutes: '1.5 - 2 minutes',\n    seconds: '91s-120s',\n  },\n  {\n    value: '4',\n    minutes: '2 - 2.5 minutes',\n    seconds: '121s-150s',\n  },\n  {\n    value: '5',\n    minutes: '2.5 - 3 minutes',\n    seconds: '151s-180s',\n  },\n  {\n    value: '6',\n    minutes: '3 - 3.5 minutes',\n    seconds: '181s-210s',\n  },\n  {\n    value: '7',\n    minutes: '3.5 - 4 minutes',\n    seconds: '211s-240s',\n  },\n  {\n    value: '8',\n    minutes: '4 - 4.5 minutes',\n    seconds: '241s-280s',\n  },\n];\n","import { defaultState } from '../libs/dependencies';\n\nconst reducer = (state = defaultState, action) => {\n  console.log(action.payload)\n  switch (action.type) {\n    case 'SET_NUMBER_OF_SQUATS':\n      return { ...state, numberOfSquats: action.payload };\n    case 'ADD_NEW_SONG':\n      return { ...state, newSongSuggestion: action.payload };\n    case 'SET_SUGGESTED_SONG':\n      return { ...state, suggestedSong: action.payload }\n    case 'SET_IS_LOADING':\n      return {...state, isLoading: action.payload}\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import { createStore } from \"redux\";\nimport { defaultState } from '../libs/dependencies';\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer, defaultState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","export const setNumberOfSquats = (numberOfSquats) => ({\n  type: 'SET_NUMBER_OF_SQUATS',\n  payload: numberOfSquats\n})\n\nexport const addNewSong = (song) => ({\n  type: 'ADD_NEW_SONG',\n  payload: song\n})\n\nexport const setSuggestedSong = (song) => ({\n  type: 'SET_SUGGESTED_SONG',\n  payload: song\n})\n\nexport const setIsLoading = (status) => ({\n  type: 'SET_IS_LOADING',\n  payload: status\n})","import * as R from \"ramda\";\n\nconst getSongLength = (songLengthState) => R.compose(R.max(1), Math.floor, R.divide(R.__, 30))(songLengthState);\n\nexport default getSongLength;","\nimport { BACKEND_URL } from '../libs/dependencies';\nimport { finishLoading, startLoading, updateSuggestedSong } from '../redux/dispatches';\nimport getSongLength from './getSongLength';\n\nconst getSong = async (numberOfSquats) => {\n  startLoading()\n  const PATH = getSongLength(numberOfSquats);\n\n  const result = await fetch(`${BACKEND_URL}/songs/${PATH}`);\n  const songData = await result.json();\n\n  const quoteResult = await fetch(`${BACKEND_URL}/quotes/${PATH}`);\n  const quoteData = await quoteResult.json();\n  \n  const suggestedSong = {\n    ...songData,\n    ...quoteData\n  }\n  \n  updateSuggestedSong(suggestedSong)\n  finishLoading()\n}\n\nexport default getSong;","import store from \"./store\"\nimport { setSuggestedSong, setIsLoading } from './actions';\n\nexport const updateSuggestedSong = (song) => store.dispatch(setSuggestedSong(song));\n\nexport const startLoading = () => store.dispatch(setIsLoading(true));\n\nexport const finishLoading = () => store.dispatch(setIsLoading(false));","import { BACKEND_URL } from '../libs/dependencies';\n\nconst postSong = async (newSong) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(newSong),\n  };\n\n  await fetch(`${BACKEND_URL}/songs`, requestOptions);\n\n  console.log('request sent to', BACKEND_URL, \"with\", newSong)\n}\n\nexport default postSong;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { formInputs, initialData, songLengths } from '../../libs/dependencies';\nimport postSong from '../../utils/postSong';\nimport { addNewSong } from '../../redux/actions';\nimport './AddSongInput.css';\n\nconst AddSongInput = () => {\n  const [formData, setFormData] = useState(initialData);\n  \n  const updateFormData = (e) => {\n    const { id, value } = e.target;\n\n    setFormData({ ...formData, [id]: value });\n  }\n\n  const dispatch = useDispatch();\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    document.querySelector('.add-song-form').reset();\n    \n    postSong(formData)\n    dispatch(addNewSong(formData))\n  }\n\n\n  return (\n    <form id='form' className='add-song-form' action='submit' onSubmit={handleSubmit}>\n      \n      {formInputs.map((input, i) => <input { ...input } key={i}onChange={ updateFormData } required />) }\n\n      <select\n        form='form'\n        type='text'\n        id='SongLengthCode'\n        onChange={updateFormData}\n        required\n      >\n        {songLengths.map((length) => (\n          <option\n            value={length.value}\n          >{`${length.minutes} (${length.seconds})`}</option>\n        ))}\n      </select>\n\n      <button\n        className='add-song-btn'\n        type='submit'\n      >\n        Add Song\n      </button>\n    </form>\n  );\n}\n\nexport default AddSongInput;\n","import AddSongInput from \"../AddSongInput\";\n\nconst Footer = () => {\n  return (\n   <footer>\n\t\t\t<img\n\t\t\t\tid='soc'\n\t\t\t\tsrc='https://www.schoolofcode.co.uk/static/logo-51c754388b198e5bbb0d08a971ebbfa2.png'\n\t\t\t\talt='soc logo'\n\t\t\t/>\n\t\t\t<AddSongInput />\n\t\t\t<img\n\t\t\t\tid='soc'\n\t\t\t\tsrc='https://www.schoolofcode.co.uk/static/logo-51c754388b198e5bbb0d08a971ebbfa2.png'\n\t\t\t\talt='soc logo'\n\t\t\t/>\n\t\t</footer>\n  );\n}\n\nexport default Footer;\n","const Header = () => {\n  return (\n    <header>\n      <img\n        id='man'\n        src='https://hips.hearstapps.com/ame-prod-menshealth-assets.s3.amazonaws.com/main/assets/bodyweight-squat.gif?resize=480:*'\n        alt='man squatting'\n      />\n      <h1>\n        <span id='title-span'>SSSG</span>\n        Super Squat Song Generator\n      </h1>\n      <img\n        id='woman'\n        src='https://thumbs.gfycat.com/BlueWetHarvestmouse-small.gif'\n        alt='woman squatting'\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","import { useSelector } from \"react-redux\";\nimport \"./QuoteDisplay.css\";\n\nconst QuoteDisplay = () => {\n  const {quote} = useSelector(state => state.suggestedSong)\n  return (\n    <div className=\"quote-display\">\n      <h2 className=\"quote-title\">Motivational Quote:</h2>\n      <p className=\"quote\">\"{quote}\"</p>\n    </div>\n  );\n}\n\nexport default QuoteDisplay;\n","import { useSelector } from \"react-redux\";\nimport './SongList.css';\n\nconst SongList = () => {\n\tconst {title, artist, link, suggestedBy} = useSelector(state => state.suggestedSong)\n\treturn (\n\t\t<div className='song-list'>\n\t\t\t<h3>{title}</h3>\n\t\t\t<h4>\n\t\t\t\t<span>by </span>\n\t\t\t\t{artist}\n\t\t\t</h4>\n\t\t\t<p className=\"link-p\">\n\t\t\t\tLink: <a href={link}>{link}</a>\n\t\t\t</p>\n\n\t\t\t<p className='suggested-by'>\n\t\t\t\tSuggested by <span>{suggestedBy}</span>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default SongList;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setNumberOfSquats } from '../../redux/actions';\nimport './SquatInput.css';\n\nconst SquatInput = () => {\n\tconst dispatch = useDispatch();\n\tconst [ input, setInput ] = useState(0);\n\n\tconst handleClick = (e) => {\n\t\te.preventDefault()\n\t\tdispatch(setNumberOfSquats(input));\n\t}\n\n\treturn (\n\t\t<form className='squat-input-form'>\n\t\t\t<p className='squat-text'>\n\t\t\t\tEnter How Many Squats You Gotta Do:\n\t\t\t</p>\n\t\t\t<input\n\t\t\t\tclassName='squat-input-number'\n\t\t\t\ttype='number'\n\t\t\t\tmin='0'\n\t\t\t\tvalue={input}\n\t\t\t\tonChange={(e) => setInput(e.target.value)}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tclassName='squat-input-btn'\n\t\t\t\ttype='submit'\n\t\t\t\tonClick={handleClick}\n\t\t\t>\n\t\t\t\tGet Songs\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nexport default SquatInput;\n\n","\nimport { useEffect } from 'react';\nimport ReactPlayer from \"react-player\";\nimport { useSelector } from \"react-redux\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport getSong from '../../utils/getSong';\nimport Footer from '../Footer';\nimport Header from '../Header';\nimport QuoteDisplay from '../QuoteDisplay';\nimport SongList from '../SongList';\nimport SquatInput from '../SquatInput';\nimport './App.css';\n\nconst App = () => {\n\tconst { numberOfSquats, isLoading }  = useSelector(state => state)\n\tconst { link: videoUrl } = useSelector(state => state.suggestedSong)\n\n\tuseEffect(() => getSong(numberOfSquats), [numberOfSquats])\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header />\n\t\t\t{isLoading ?\n\t\t\t\t<ClipLoader color=\"white\" size={200} css=\"margin: auto; grid-column: 1/-1;\"/>\n\t\t\t\t:\n\t\t\t\t<>\n\t\t\t\t\t<SquatInput />\n\t\t\t\t\t<QuoteDisplay />\n\t\t\t\t\t<ReactPlayer className=\"song-video\" url={videoUrl} width=\"400px\" height=\"300px\" />\n\t\t\t\t\t<SongList />\n\t\t\t\t</>\n\t\t}\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport App from './Components/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}