{"version":3,"sources":["libs/dependencies.js","hooks/useFetch.js","hooks/usePost.js","Components/AddSongInput/index.js","Components/Footer/index.js","Components/Header/index.js","Components/QuoteDisplay/index.js","Components/SongList/index.js","Components/SquatInput/index.js","Components/App/index.js","reportWebVitals.js","index.js"],"names":["BACKEND_URL","formInputs","type","placeholder","id","songLengths","value","minutes","seconds","useFetch","songLengthState","useState","data","setData","PATH","Math","max","getSong","useEffect","a","fetch","result","json","songData","quoteResult","quoteData","fetchData","usePost","newSong","requestOptions","method","headers","body","JSON","stringify","initialData","Title","Artist","SongLengthCode","Link","SuggestedBy","AddSongInput","makePost","UpdateData","event","key","target","newValue","className","action","map","input","onChange","form","required","length","onClick","preventDefault","document","querySelector","reset","Footer","src","alt","Header","QuoteDisplay","quote","SongList","title","artist","href","link","suggestedBy","SquatInput","setInput","min","e","App","dataState","setDataState","appData","url","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d25a960.chunk.js","sourcesContent":["export const BACKEND_URL = 'https://supersquatsongapp.herokuapp.com';\n\nexport const getSong = (songLengthState) => Math.max(songLengthState / 30, 1);\n\nexport const formInputs = [\n  {\n    type: 'text',\n    placeholder: 'Title',\n    id: 'Title',\n  },\n  {\n    type: 'text',\n    placeholder: 'Artist',\n    id: 'Artist',\n  },\n  {\n    type: 'text',\n    placeholder: 'Link',\n    id: 'Link',\n  },\n  {\n    type: 'text',\n    placeholder: 'Your Name',\n    id: 'SuggestedBy',\n  },\n];\n\nexport const songLengths = [\n  {\n    value: '0',\n    minutes: 'How Long is The Song?',\n    seconds: 'please select',\n  },\n  {\n    value: '1',\n    minutes: '0 - 1 minute',\n    seconds: '0s-60s',\n  },\n  {\n    value: '2',\n    minutes: '1 - 1.5 minutes',\n    seconds: '61s-90s',\n  },\n  {\n    value: '3',\n    minutes: '1.5 - 2 minutes',\n    seconds: '91s-120s',\n  },\n  {\n    value: '4',\n    minutes: '2 - 2.5 minutes',\n    seconds: '121s-150s',\n  },\n  {\n    value: '5',\n    minutes: '2.5 - 3 minutes',\n    seconds: '151s-180s',\n  },\n  {\n    value: '6',\n    minutes: '3 - 3.5 minutes',\n    seconds: '181s-210s',\n  },\n  {\n    value: '7',\n    minutes: '3.5 - 4 minutes',\n    seconds: '211s-240s',\n  },\n  {\n    value: '8',\n    minutes: '4 - 4.5 minutes',\n    seconds: '241s-280s',\n  },\n];\n","import { useEffect, useState } from \"react\";\nimport { BACKEND_URL, getSong } from '../libs/dependencies';\n\n\nfunction useFetch(songLengthState) {\n  const [data, setData] = useState(null);\n\n  const PATH = getSong(songLengthState);\n\n  useEffect(() => {\n    async function fetchData() {\n      let result = await fetch(`${BACKEND_URL}/songs/${PATH}`);\n      let songData = await result.json();\n  \n      let quoteResult = await fetch(`${BACKEND_URL}/quotes/${PATH}`);\n      let quoteData = await quoteResult.json();\n      \n      setData({songData: songData, quoteData: quoteData});\n    }\n\n    fetchData();\n  }, [songLengthState, PATH]);\n\n  return data;\n}\n\nexport default useFetch;\n","import { BACKEND_URL } from '../libs/dependencies';\n\nfunction usePost() {\n  \n    async function makePost(newSong) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newSong),\n      };\n      await fetch(`${BACKEND_URL}/songs`, requestOptions);\n    }\n\n    return makePost;\n}\n\nexport default usePost;\n","import { useState } from 'react';\nimport usePost from '../../hooks/usePost';\nimport { formInputs, songLengths } from '../../libs/dependencies';\nimport './AddSongInput.css';\n\nconst initialData = {\n  Title: 'blank',\n  Artist: 'blank',\n  SongLengthCode: 'blank',\n  Link: 'blank',\n  SuggestedBy: 'blank',\n};\n\nfunction AddSongInput() {\n  const [data, setData] = useState(initialData);\n  const makePost = usePost();\n\n  function UpdateData(event) {\n    const key = event.target.id;\n    const newValue = event.target.value;\n\n    setData({ ...data, [key]: newValue });\n  }\n\n  return (\n    <form id='form' className='add-song-form' action='submit'>\n\n      {formInputs.map((input) => <input {...input} onChange={UpdateData} />)}\n\n      <select\n        form='form'\n        type='text'\n        id='SongLengthCode'\n        onChange={UpdateData}\n        required\n      >\n        {songLengths.map((length) => (\n          <option\n            value={length.value}\n          >{`${length.minutes} (${length.seconds})`}</option>\n        ))}\n      </select>\n\n      <button\n        className='add-song-btn'\n        onClick={(event) => {\n          event.preventDefault();\n          makePost(data);\n\n          document.querySelector('.add-song-form').reset();\n        }}\n      >\n        Add Song\n      </button>\n    </form>\n  );\n}\n\nexport default AddSongInput;\n","import React from 'react';\nimport AddSongInput from \"../AddSongInput\";\n\nfunction Footer() {\n  return (\n   <footer>\n\t\t\t\t\t<img\n\t\t\t\t\tid='soc'\n\t\t\t\t\tsrc='https://www.schoolofcode.co.uk/static/logo-51c754388b198e5bbb0d08a971ebbfa2.png'\n\t\t\t\t\talt='soc logo'\n\t\t\t\t/>\n\t\t\t\t<AddSongInput className='add-song-com' />\n\t\t\t\t<img\n\t\t\t\t\tid='soc'\n\t\t\t\t\tsrc='https://www.schoolofcode.co.uk/static/logo-51c754388b198e5bbb0d08a971ebbfa2.png'\n\t\t\t\t\talt='soc logo'\n\t\t\t\t/>\n\t\t\t</footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction Header() {\n  return (\n    <header>\n      <img\n        id='man'\n        src='https://hips.hearstapps.com/ame-prod-menshealth-assets.s3.amazonaws.com/main/assets/bodyweight-squat.gif?resize=480:*'\n        alt='man squatting'\n      />\n      <h1>\n        <span id='title-span'>SSSG</span>\n        Super Squat Song Generator\n      </h1>\n      <img\n        id='woman'\n        src='https://thumbs.gfycat.com/BlueWetHarvestmouse-small.gif'\n        alt='woman squatting'\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","import \"./QuoteDisplay.css\";\n\nfunction QuoteDisplay({ data }) {\n  return (\n    <div className=\"quote-display\">\n      <h2 className=\"quote-title\">Motivational Quote:</h2>\n      <p className=\"quote\">\"{data.quote}\"</p>\n    </div>\n  );\n}\n\nexport default QuoteDisplay;\n","import './SongList.css';\n\nfunction SongList({ data }) {\n\treturn (\n\t\t<div className='song-list'>\n\t\t\t<h3>{data.title}</h3>\n\t\t\t<h4>\n\t\t\t\t<span>by </span>\n\t\t\t\t{data.artist}\n\t\t\t</h4>\n\t\t\t<p className=\"link-p\">\n\t\t\t\tLink: <a href='{data.link}'>{data.link}</a>\n\t\t\t</p>\n\n\t\t\t<p className='suggested-by'>\n\t\t\t\tSuggested by <span>{data.suggestedBy}</span>\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default SongList;\n","import { useState } from 'react';\nimport './SquatInput.css';\n\n//takes in function to send squats back up to app.\n\nfunction SquatInput({ onClick }) {\n\tconst [ input, setInput ] = useState(5);\n\n\treturn (\n\t\t<form className='squat-input-form'>\n\t\t\t<p className='squat-text'>\n\t\t\t\tEnter How Many Squats You Gotta Do:\n\t\t\t</p>\n\t\t\t<input\n\t\t\t\tclassName='squat-input-number'\n\t\t\t\ttype='number'\n\t\t\t\tmin='0'\n\t\t\t\tvalue={input}\n\t\t\t\tonChange={(e) => setInput(e.target.value)}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tclassName='squat-input-btn'\n\t\t\t\ttype='submit'\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tonClick(input);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tGet Songs\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nexport default SquatInput;\n\n","import { useState } from 'react';\nimport ReactPlayer from \"react-player\";\nimport useFetch from '../../hooks/useFetch';\nimport Footer from '../Footer';\nimport Header from '../Header';\nimport QuoteDisplay from '../QuoteDisplay';\nimport SongList from '../SongList';\nimport SquatInput from '../SquatInput';\nimport './App.css';\n\n\nfunction App() {\n\tconst [ dataState, setDataState ] = useState(0);\n\n\tconst appData = useFetch(dataState);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header />\n\t\t\t{appData && \n\t\t\t\t<>\n\t\t\t\t\t<SquatInput onClick={setDataState} />\n\t\t\t\t\t<QuoteDisplay data={appData.quoteData} />\n\t\t\t\t\t<ReactPlayer className=\"song-video\" url={appData.songData.link} width=\"400px\" height=\"300px\" />\n\t\t\t\t\t<SongList className='list-com' data={appData.songData} />\n\t\t\t\t</>\n\t\t}\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}